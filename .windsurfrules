npm list react-router-dom# Frontend React Project
- /src/components
- /src/pages
- /src/routes
- /src/services
- /src/hooks
- /src/utils
- /src/context

# Firebase Backend
- /functions

# Context documents
- /docs

# Coding style guidelines
- Follow React best practices and hooks patterns
- Implement role-based access control for all components
- Always follow SOLID and DRY principles
- Use Firebase security rules for data protection
- Implement double validation (frontend and backend)
- Use async/await for Firebase operations
- We are working with Firebases latest version
- Document all components and functions
- Update context.md whenever an important change is made
- Update roadmap.md whenever an important change is made
- Double check imports and exports
- Create reusable components when possible
- Use nested routes for routing, check how routes are implemented in the project before adding a new one
- Package manager should be npm
- Styling should be managed with tailwind
- Always favor a dark theme with color accents
- Add indexes to firestore.indexes.json when needed
- Implement proper error handling for all Firebase operations
- Follow the folder structure defined in the technical analysis
- Check and update task-tracker.md when a task is completed
- Make sure everything is actually useful to the user 
- Do not create anything that is simply placeholder code, or base functionality (unless you are planning on expanding on it later) 
- At no point should you say something is implemented when it is only 10% implemented or is pure placeholder code 
- You are expected to code from A to Z and not use placeholder or small parts of code that donâ€™t really do what a user would want.
- Check Roadmap before each task to make sure you are not working on something that is already implemented or is not in the roadmap (if it is not on the roadmap, ask for authorization to add it to the roadmap and to implement it)

