{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\War Machine\\\\Desktop\\\\MICROVERSE REPO\\\\choice_roulette\\\\src\\\\pages\\\\SpinWheelPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { ArrowPathIcon, ArrowLeftIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpinWheelPage = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [options, setOptions] = useState([]);\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [rotation, setRotation] = useState(0);\n  // Removed unused state variables\n  // const [spinning, setSpinning] = useState(false);\n  const wheelRef = useRef(null);\n  const spinTimeout = useRef(null);\n  const spinInterval = useRef(null);\n\n  // Generate colors for the wheel segments with purple/violet theme\n  const colors = ['rgba(139, 92, 246, 0.9)', 'rgba(124, 58, 237, 0.9)', 'rgba(109, 40, 217, 0.9)', 'rgba(91, 33, 182, 0.9)', 'rgba(76, 29, 149, 0.9)', 'rgba(167, 139, 250, 0.9)', 'rgba(196, 181, 253, 0.9)', 'rgba(221, 214, 254, 0.9)', 'rgba(237, 233, 254, 0.9)', 'rgba(245, 243, 255, 0.9)'];\n\n  // Get options from location state or redirect if none provided\n  useEffect(() => {\n    var _location$state;\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.options) {\n      setOptions(location.state.options);\n    } else {\n      navigate('/add-options');\n    }\n    return () => {\n      const currentSpinInterval = spinInterval.current;\n      const currentSpinTimeout = spinTimeout.current;\n      if (currentSpinInterval) clearInterval(currentSpinInterval);\n      if (currentSpinTimeout) clearTimeout(currentSpinTimeout);\n    };\n  }, [location.state, navigate]);\n\n  // Calculate the angle for each option on the wheel\n  const getWheelSections = useCallback(() => {\n    const totalOptions = options.length;\n    if (totalOptions === 0) return [];\n    const anglePerSection = 360 / totalOptions;\n    return options.map((option, index) => {\n      const startAngle = index * anglePerSection;\n      const endAngle = (index + 1) * anglePerSection;\n      const color = colors[index % colors.length];\n      return {\n        option,\n        startAngle,\n        endAngle,\n        color,\n        textRotation: startAngle + anglePerSection / 2 // Center text in the segment\n      };\n    });\n  }, [options, colors]);\n  const spinWheel = () => {\n    if (isSpinning || options.length < 2) return;\n    setIsSpinning(true);\n    setSelectedOption(null);\n\n    // Random number of full rotations (5-10) plus a random segment\n    const spinDuration = 5000; // 5 seconds\n    const spinRotations = 5 + Math.floor(Math.random() * 6);\n    const selectedIndex = Math.floor(Math.random() * options.length);\n    const anglePerSection = 360 / options.length;\n    const finalRotation = 360 * spinRotations + (360 - anglePerSection * selectedIndex - anglePerSection / 2);\n\n    // Start spinning animation\n    let startRotation = rotation % 360;\n    const startTime = Date.now();\n\n    // Easing function for smooth deceleration\n    const easeOutQuart = t => 1 - Math.pow(1 - t, 4);\n    const animate = () => {\n      const now = Date.now();\n      const elapsed = now - startTime;\n      const progress = Math.min(elapsed / spinDuration, 1);\n\n      // Apply easing to the progress\n      const easedProgress = easeOutQuart(progress);\n\n      // Calculate current rotation with easing\n      const currentRotation = startRotation + finalRotation * easedProgress;\n      setRotation(currentRotation);\n\n      // Update selected option during spin (optional visual effect)\n      if (progress < 0.98) {\n        // Don't update in the last 2%\n        const currentAngle = (currentRotation + 90) % 360; // Convert to 0-360 range\n        const segmentIndex = Math.floor(currentAngle % 360 / anglePerSection);\n        const currentOption = options[options.length - 1 - segmentIndex % options.length];\n        setSelectedOption(currentOption);\n      } else {\n        setSelectedOption(options[selectedIndex]);\n      }\n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      } else {\n        // Finalize\n        setRotation(startRotation + finalRotation);\n        setSelectedOption(options[selectedIndex]);\n        setIsSpinning(false);\n      }\n    };\n    animate();\n  };\n\n  // Calculate SVG path for each segment\n  const getSegmentPath = (startAngle, endAngle, radius = 150) => {\n    const startRad = (startAngle - 90) * Math.PI / 180; // Start from top\n    const endRad = (endAngle - 90) * Math.PI / 180;\n    const x1 = 150 + Math.cos(startRad) * radius;\n    const y1 = 150 + Math.sin(startRad) * radius;\n    const x2 = 150 + Math.cos(endRad) * radius;\n    const y2 = 150 + Math.sin(endRad) * radius;\n    const largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1;\n    return `M 150 150 L ${x1} ${y1} A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2} Z`;\n  };\n\n  // Calculate text position on the wheel\n  const getTextPosition = (angle, radius = 100) => {\n    const rad = (angle - 90) * Math.PI / 180; // Convert to radians and adjust to start from top\n    const x = 150 + Math.cos(rad) * radius;\n    const y = 150 + Math.sin(rad) * radius;\n    return {\n      x,\n      y\n    };\n  };\n  const wheelSections = getWheelSections();\n  const canSpin = options.length >= 2 && !isSpinning;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-4xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/add-options'),\n          className: \"flex items-center text-slate-300 hover:text-white transition-colors bg-slate-800 hover:bg-slate-700 px-4 py-2 rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(ArrowLeftIcon, {\n            className: \"w-5 h-5 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), \"Back to Options\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold text-center bg-clip-text text-transparent bg-gradient-to-r from-violet-400 to-violet-200\",\n          children: \"Spin the Wheel!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-24\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full aspect-square max-w-2xl mx-auto mb-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ref: wheelRef,\n          className: \"w-full h-full relative transition-transform duration-100\",\n          style: {\n            transform: `rotate(${rotation}deg)`,\n            transition: isSpinning ? 'transform 5s cubic-bezier(0.17, 0.67, 0.12, 0.99)' : 'transform 0.3s ease-out'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"100%\",\n            height: \"100%\",\n            viewBox: \"0 0 300 300\",\n            className: \"drop-shadow-[0_0_30px_rgba(139,92,246,0.2)]\",\n            children: [wheelSections.map((section, index) => /*#__PURE__*/_jsxDEV(\"g\", {\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: getSegmentPath(section.startAngle, section.endAngle, 140),\n                fill: section.color,\n                stroke: \"rgba(30, 41, 59, 0.7)\",\n                strokeWidth: \"1\",\n                className: \"transition-all duration-300 hover:opacity-90\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this), section.option && /*#__PURE__*/_jsxDEV(\"text\", {\n                x: getTextPosition(section.textRotation, 80).x,\n                y: getTextPosition(section.textRotation, 80).y,\n                textAnchor: \"middle\",\n                dominantBaseline: \"middle\",\n                fill: \"white\",\n                fontSize: \"12\",\n                fontWeight: \"500\",\n                transform: `rotate(${section.textRotation + 90}, ${getTextPosition(section.textRotation, 80).x}, ${getTextPosition(section.textRotation, 80).y})`,\n                className: \"pointer-events-none select-none\",\n                style: {\n                  textShadow: '1px 1px 2px rgba(0,0,0,0.5)',\n                  transition: 'all 0.3s ease'\n                },\n                children: section.option.length > 12 ? `${section.option.substring(0, 10)}...` : section.option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"150\",\n              cy: \"150\",\n              r: \"25\",\n              fill: \"rgb(15, 23, 42)\",\n              stroke: \"rgba(139, 92, 246, 0.8)\",\n              strokeWidth: \"3\",\n              className: \"drop-shadow-lg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"150\",\n              cy: \"150\",\n              r: \"15\",\n              fill: \"rgba(139, 92, 246, 0.2)\",\n              stroke: \"rgba(139, 92, 246, 0.5)\",\n              strokeWidth: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-0 left-1/2 -translate-x-1/2 -translate-y-1/2 w-8 h-8 z-20\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 32 32\",\n            fill: \"none\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M16 2L30 30H2L16 2Z\",\n              fill: \"url(#pointerGradient)\",\n              stroke: \"rgba(139, 92, 246, 0.8)\",\n              strokeWidth: \"1.5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"defs\", {\n              children: /*#__PURE__*/_jsxDEV(\"linearGradient\", {\n                id: \"pointerGradient\",\n                x1: \"16\",\n                y1: \"2\",\n                x2: \"16\",\n                y2: \"30\",\n                gradientUnits: \"userSpaceOnUse\",\n                children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n                  stopColor: \"#7C3AED\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n                  offset: \"1\",\n                  stopColor: \"#4C1D95\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-12 text-center animate-fade-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-2 text-lg font-medium text-slate-300\",\n            children: isSpinning ? 'Spinning...' : selectedOption ? 'Selected:' : 'Ready to spin!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), selectedOption && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-3xl font-bold bg-gradient-to-r from-violet-500 to-violet-300 text-transparent bg-clip-text px-6 py-3\",\n            children: selectedOption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mt-8\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: spinWheel,\n          disabled: !canSpin,\n          className: `px-8 py-4 text-lg font-semibold rounded-full transition-all duration-300 ${!canSpin ? 'bg-slate-700 text-slate-500 cursor-not-allowed' : 'bg-gradient-to-r from-violet-600 to-violet-500 text-white hover:from-violet-700 hover:to-violet-600 transform hover:scale-105 shadow-lg hover:shadow-violet-500/30'}`,\n          children: [/*#__PURE__*/_jsxDEV(ArrowPathIcon, {\n            className: `inline-block w-5 h-5 mr-2 ${isSpinning ? 'animate-spin' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), isSpinning ? 'Spinning...' : 'Spin the Wheel! 🎡']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), options.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glass p-6 mt-8 rounded-2xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-slate-200 mb-4\",\n          children: \"Your Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 sm:grid-cols-2 gap-3\",\n          children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-3 rounded-lg transition-all duration-200 ${selectedOption === option ? 'bg-gradient-to-r from-violet-900/50 to-violet-800/50 border border-violet-700/50' : 'bg-slate-800/50 border border-slate-700/50 hover:bg-slate-800/70'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-6 h-6 rounded-full flex-shrink-0 flex items-center justify-center text-white text-xs font-bold mr-3\",\n                style: {\n                  backgroundColor: colors[index % colors.length]\n                },\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-slate-200\",\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(SpinWheelPage, \"z7mK3AdziKsngme8xeYPqx2EkCM=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = SpinWheelPage;\nexport default SpinWheelPage;\nvar _c;\n$RefreshReg$(_c, \"SpinWheelPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useLocation","useNavigate","ArrowPathIcon","ArrowLeftIcon","jsxDEV","_jsxDEV","SpinWheelPage","_s","location","navigate","options","setOptions","isSpinning","setIsSpinning","selectedOption","setSelectedOption","rotation","setRotation","wheelRef","spinTimeout","spinInterval","colors","_location$state","state","currentSpinInterval","current","currentSpinTimeout","clearInterval","clearTimeout","getWheelSections","totalOptions","length","anglePerSection","map","option","index","startAngle","endAngle","color","textRotation","spinWheel","spinDuration","spinRotations","Math","floor","random","selectedIndex","finalRotation","startRotation","startTime","Date","now","easeOutQuart","t","pow","animate","elapsed","progress","min","easedProgress","currentRotation","currentAngle","segmentIndex","currentOption","requestAnimationFrame","getSegmentPath","radius","startRad","PI","endRad","x1","cos","y1","sin","x2","y2","largeArcFlag","getTextPosition","angle","rad","x","y","wheelSections","canSpin","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","transform","transition","width","height","viewBox","section","d","fill","stroke","strokeWidth","textAnchor","dominantBaseline","fontSize","fontWeight","textShadow","substring","cx","cy","r","xmlns","id","gradientUnits","stopColor","offset","disabled","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/War Machine/Desktop/MICROVERSE REPO/choice_roulette/src/pages/SpinWheelPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { ArrowPathIcon, ArrowLeftIcon } from '@heroicons/react/24/outline';\r\n\r\nconst SpinWheelPage = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [options, setOptions] = useState([]);\r\n  const [isSpinning, setIsSpinning] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [rotation, setRotation] = useState(0);\r\n  // Removed unused state variables\r\n  // const [spinning, setSpinning] = useState(false);\r\n  const wheelRef = useRef(null);\r\n  const spinTimeout = useRef(null);\r\n  const spinInterval = useRef(null);\r\n\r\n  // Generate colors for the wheel segments with purple/violet theme\r\n  const colors = [\r\n    'rgba(139, 92, 246, 0.9)', 'rgba(124, 58, 237, 0.9)', 'rgba(109, 40, 217, 0.9)',\r\n    'rgba(91, 33, 182, 0.9)', 'rgba(76, 29, 149, 0.9)',\r\n    'rgba(167, 139, 250, 0.9)', 'rgba(196, 181, 253, 0.9)',\r\n    'rgba(221, 214, 254, 0.9)', 'rgba(237, 233, 254, 0.9)',\r\n    'rgba(245, 243, 255, 0.9)'\r\n  ];\r\n\r\n  // Get options from location state or redirect if none provided\r\n  useEffect(() => {\r\n    if (location.state?.options) {\r\n      setOptions(location.state.options);\r\n    } else {\r\n      navigate('/add-options');\r\n    }\r\n    \r\n    return () => {\r\n      const currentSpinInterval = spinInterval.current;\r\n      const currentSpinTimeout = spinTimeout.current;\r\n      \r\n      if (currentSpinInterval) clearInterval(currentSpinInterval);\r\n      if (currentSpinTimeout) clearTimeout(currentSpinTimeout);\r\n    };\r\n  }, [location.state, navigate]);\r\n\r\n  // Calculate the angle for each option on the wheel\r\n  const getWheelSections = useCallback(() => {\r\n    const totalOptions = options.length;\r\n    if (totalOptions === 0) return [];\r\n    \r\n    const anglePerSection = 360 / totalOptions;\r\n    return options.map((option, index) => {\r\n      const startAngle = index * anglePerSection;\r\n      const endAngle = (index + 1) * anglePerSection;\r\n      const color = colors[index % colors.length];\r\n      \r\n      return {\r\n        option,\r\n        startAngle,\r\n        endAngle,\r\n        color,\r\n        textRotation: startAngle + anglePerSection / 2 // Center text in the segment\r\n      };\r\n    });\r\n  }, [options, colors]);\r\n\r\n  const spinWheel = () => {\r\n    if (isSpinning || options.length < 2) return;\r\n    \r\n    setIsSpinning(true);\r\n    setSelectedOption(null);\r\n    \r\n    // Random number of full rotations (5-10) plus a random segment\r\n    const spinDuration = 5000; // 5 seconds\r\n    const spinRotations = 5 + Math.floor(Math.random() * 6);\r\n    const selectedIndex = Math.floor(Math.random() * options.length);\r\n    const anglePerSection = 360 / options.length;\r\n    const finalRotation = 360 * spinRotations + (360 - (anglePerSection * selectedIndex) - (anglePerSection / 2));\r\n    \r\n    // Start spinning animation\r\n    let startRotation = rotation % 360;\r\n    const startTime = Date.now();\r\n    \r\n    // Easing function for smooth deceleration\r\n    const easeOutQuart = (t) => 1 - Math.pow(1 - t, 4);\r\n    \r\n    const animate = () => {\r\n      const now = Date.now();\r\n      const elapsed = now - startTime;\r\n      const progress = Math.min(elapsed / spinDuration, 1);\r\n      \r\n      // Apply easing to the progress\r\n      const easedProgress = easeOutQuart(progress);\r\n      \r\n      // Calculate current rotation with easing\r\n      const currentRotation = startRotation + (finalRotation * easedProgress);\r\n      setRotation(currentRotation);\r\n      \r\n      // Update selected option during spin (optional visual effect)\r\n      if (progress < 0.98) { // Don't update in the last 2%\r\n        const currentAngle = (currentRotation + 90) % 360; // Convert to 0-360 range\r\n        const segmentIndex = Math.floor((currentAngle % 360) / anglePerSection);\r\n        const currentOption = options[options.length - 1 - (segmentIndex % options.length)];\r\n        setSelectedOption(currentOption);\r\n      } else {\r\n        setSelectedOption(options[selectedIndex]);\r\n      }\r\n      \r\n      if (progress < 1) {\r\n        requestAnimationFrame(animate);\r\n      } else {\r\n        // Finalize\r\n        setRotation(startRotation + finalRotation);\r\n        setSelectedOption(options[selectedIndex]);\r\n        setIsSpinning(false);\r\n      }\r\n    };\r\n    \r\n    animate();\r\n  };\r\n\r\n  // Calculate SVG path for each segment\r\n  const getSegmentPath = (startAngle, endAngle, radius = 150) => {\r\n    const startRad = ((startAngle - 90) * Math.PI) / 180; // Start from top\r\n    const endRad = ((endAngle - 90) * Math.PI) / 180;\r\n    \r\n    const x1 = 150 + Math.cos(startRad) * radius;\r\n    const y1 = 150 + Math.sin(startRad) * radius;\r\n    const x2 = 150 + Math.cos(endRad) * radius;\r\n    const y2 = 150 + Math.sin(endRad) * radius;\r\n    \r\n    const largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1;\r\n    \r\n    return `M 150 150 L ${x1} ${y1} A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2} Z`;\r\n  };\r\n  \r\n  // Calculate text position on the wheel\r\n  const getTextPosition = (angle, radius = 100) => {\r\n    const rad = ((angle - 90) * Math.PI) / 180; // Convert to radians and adjust to start from top\r\n    const x = 150 + Math.cos(rad) * radius;\r\n    const y = 150 + Math.sin(rad) * radius;\r\n    return { x, y };\r\n  };\r\n\r\n  const wheelSections = getWheelSections();\r\n  const canSpin = options.length >= 2 && !isSpinning;\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center p-4\">\r\n      <div className=\"w-full max-w-4xl\">\r\n        <div className=\"flex justify-between items-center mb-8\">\r\n          <button\r\n            onClick={() => navigate('/add-options')}\r\n            className=\"flex items-center text-slate-300 hover:text-white transition-colors bg-slate-800 hover:bg-slate-700 px-4 py-2 rounded-lg\"\r\n          >\r\n            <ArrowLeftIcon className=\"w-5 h-5 mr-1\" />\r\n            Back to Options\r\n          </button>\r\n          <h1 className=\"text-4xl font-bold text-center bg-clip-text text-transparent bg-gradient-to-r from-violet-400 to-violet-200\">\r\n            Spin the Wheel!\r\n          </h1>\r\n          <div className=\"w-24\"></div> {/* For balance */}\r\n        </div>\r\n\r\n        <div className=\"relative w-full aspect-square max-w-2xl mx-auto mb-12\">\r\n          {/* Wheel Container */}\r\n          <div \r\n            ref={wheelRef}\r\n            className=\"w-full h-full relative transition-transform duration-100\"\r\n            style={{\r\n              transform: `rotate(${rotation}deg)`,\r\n              transition: isSpinning ? 'transform 5s cubic-bezier(0.17, 0.67, 0.12, 0.99)' : 'transform 0.3s ease-out'\r\n            }}\r\n          >\r\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 300 300\" className=\"drop-shadow-[0_0_30px_rgba(139,92,246,0.2)]\">\r\n              {/* Wheel segments */}\r\n              {wheelSections.map((section, index) => (\r\n                <g key={index}>\r\n                  <path \r\n                    d={getSegmentPath(section.startAngle, section.endAngle, 140)}\r\n                    fill={section.color}\r\n                    stroke=\"rgba(30, 41, 59, 0.7)\"\r\n                    strokeWidth=\"1\"\r\n                    className=\"transition-all duration-300 hover:opacity-90\"\r\n                  />\r\n                  {/* Text */}\r\n                  {section.option && (\r\n                    <text\r\n                      x={getTextPosition(section.textRotation, 80).x}\r\n                      y={getTextPosition(section.textRotation, 80).y}\r\n                      textAnchor=\"middle\"\r\n                      dominantBaseline=\"middle\"\r\n                      fill=\"white\"\r\n                      fontSize=\"12\"\r\n                      fontWeight=\"500\"\r\n                      transform={`rotate(${section.textRotation + 90}, ${getTextPosition(section.textRotation, 80).x}, ${getTextPosition(section.textRotation, 80).y})`}\r\n                      className=\"pointer-events-none select-none\"\r\n                      style={{\r\n                        textShadow: '1px 1px 2px rgba(0,0,0,0.5)',\r\n                        transition: 'all 0.3s ease'\r\n                      }}\r\n                    >\r\n                      {section.option.length > 12 ? \r\n                        `${section.option.substring(0, 10)}...` : \r\n                        section.option}\r\n                    </text>\r\n                  )}\r\n                </g>\r\n              ))}\r\n              \r\n              {/* Center circle */}\r\n              <circle \r\n                cx=\"150\" \r\n                cy=\"150\" \r\n                r=\"25\" \r\n                fill=\"rgb(15, 23, 42)\" \r\n                stroke=\"rgba(139, 92, 246, 0.8)\" \r\n                strokeWidth=\"3\"\r\n                className=\"drop-shadow-lg\"\r\n              />\r\n              \r\n              {/* Inner circle */}\r\n              <circle \r\n                cx=\"150\" \r\n                cy=\"150\" \r\n                r=\"15\" \r\n                fill=\"rgba(139, 92, 246, 0.2)\" \r\n                stroke=\"rgba(139, 92, 246, 0.5)\" \r\n                strokeWidth=\"2\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          \r\n          {/* Pointer - Moved outside the rotating container */}\r\n          <div className=\"absolute top-0 left-1/2 -translate-x-1/2 -translate-y-1/2 w-8 h-8 z-20\">\r\n            <svg viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path \r\n                d=\"M16 2L30 30H2L16 2Z\" \r\n                fill=\"url(#pointerGradient)\" \r\n                stroke=\"rgba(139, 92, 246, 0.8)\" \r\n                strokeWidth=\"1.5\"\r\n              />\r\n              <defs>\r\n                <linearGradient id=\"pointerGradient\" x1=\"16\" y1=\"2\" x2=\"16\" y2=\"30\" gradientUnits=\"userSpaceOnUse\">\r\n                  <stop stopColor=\"#7C3AED\"/>\r\n                  <stop offset=\"1\" stopColor=\"#4C1D95\"/>\r\n                </linearGradient>\r\n              </defs>\r\n            </svg>\r\n          </div>\r\n\r\n          {/* Selected option display */}\r\n          <div className=\"mt-12 text-center animate-fade-in\">\r\n            <div className=\"mb-2 text-lg font-medium text-slate-300\">\r\n              {isSpinning ? 'Spinning...' : selectedOption ? 'Selected:' : 'Ready to spin!'}\r\n            </div>\r\n            {selectedOption && (\r\n              <div className=\"text-3xl font-bold bg-gradient-to-r from-violet-500 to-violet-300 text-transparent bg-clip-text px-6 py-3\">\r\n                {selectedOption}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"text-center mt-8\">\r\n          <button\r\n            onClick={spinWheel}\r\n            disabled={!canSpin}\r\n            className={`px-8 py-4 text-lg font-semibold rounded-full transition-all duration-300 ${\r\n              !canSpin \r\n                ? 'bg-slate-700 text-slate-500 cursor-not-allowed' \r\n                : 'bg-gradient-to-r from-violet-600 to-violet-500 text-white hover:from-violet-700 hover:to-violet-600 transform hover:scale-105 shadow-lg hover:shadow-violet-500/30'\r\n            }`}\r\n          >\r\n            <ArrowPathIcon className={`inline-block w-5 h-5 mr-2 ${isSpinning ? 'animate-spin' : ''}`} />\r\n            {isSpinning ? 'Spinning...' : 'Spin the Wheel! 🎡'}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Options List */}\r\n        {options.length > 0 && (\r\n          <div className=\"glass p-6 mt-8 rounded-2xl\">\r\n            <h2 className=\"text-xl font-semibold text-slate-200 mb-4\">Your Options</h2>\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\r\n              {options.map((option, index) => (\r\n                <div \r\n                  key={index} \r\n                  className={`p-3 rounded-lg transition-all duration-200 ${\r\n                    selectedOption === option \r\n                      ? 'bg-gradient-to-r from-violet-900/50 to-violet-800/50 border border-violet-700/50' \r\n                      : 'bg-slate-800/50 border border-slate-700/50 hover:bg-slate-800/70'\r\n                  }`}\r\n                >\r\n                  <div className=\"flex items-center\">\r\n                    <div \r\n                      className=\"w-6 h-6 rounded-full flex-shrink-0 flex items-center justify-center text-white text-xs font-bold mr-3\"\r\n                      style={{ backgroundColor: colors[index % colors.length] }}\r\n                    >\r\n                      {index + 1}\r\n                    </div>\r\n                    <span className=\"text-slate-200\">{option}</span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpinWheelPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}