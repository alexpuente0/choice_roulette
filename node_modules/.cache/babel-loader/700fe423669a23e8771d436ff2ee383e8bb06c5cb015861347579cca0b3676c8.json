{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\War Machine\\\\Desktop\\\\MICROVERSE REPO\\\\choice_roulette\\\\src\\\\pages\\\\SpinWheelPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { ArrowPathIcon, ArrowLeftIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpinWheelPage = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [options, setOptions] = useState([]);\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [rotation, setRotation] = useState(0);\n  // Removed unused state variables\n  // const [spinning, setSpinning] = useState(false);\n  const wheelRef = useRef(null);\n  const spinTimeout = useRef(null);\n  const spinInterval = useRef(null);\n\n  // Generate colors for the wheel segments\n  const colors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#EC4899', '#14B8A6', '#F97316', '#6366F1', '#F43F5E'];\n\n  // Get options from location state or redirect if none provided\n  useEffect(() => {\n    var _location$state;\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.options) {\n      setOptions(location.state.options);\n    } else {\n      navigate('/add-options');\n    }\n    return () => {\n      const currentSpinInterval = spinInterval.current;\n      const currentSpinTimeout = spinTimeout.current;\n      if (currentSpinInterval) clearInterval(currentSpinInterval);\n      if (currentSpinTimeout) clearTimeout(currentSpinTimeout);\n    };\n  }, [location.state, navigate]);\n\n  // Calculate the angle for each option on the wheel\n  const getWheelSections = useCallback(() => {\n    const totalOptions = options.length;\n    if (totalOptions === 0) return [];\n    const anglePerSection = 360 / totalOptions;\n    return options.map((option, index) => {\n      const startAngle = index * anglePerSection - 90; // Start from top\n      const endAngle = (index + 1) * anglePerSection - 90;\n      const color = colors[index % colors.length];\n      return {\n        option,\n        startAngle,\n        endAngle,\n        color,\n        textRotation: startAngle + anglePerSection / 2 // Center text in the segment\n      };\n    });\n  }, [options, colors]); // Added dependencies\n\n  const spinWheel = () => {\n    if (isSpinning || options.length < 2) return;\n    setIsSpinning(true);\n    setSelectedOption(null);\n\n    // Random number of full rotations (5-10) plus a random segment\n    const spinDuration = 5000; // 5 seconds\n    const spinRotations = 5 + Math.floor(Math.random() * 6);\n    const selectedIndex = Math.floor(Math.random() * options.length);\n    const anglePerSection = 360 / options.length;\n    const finalRotation = 360 * spinRotations + (360 - anglePerSection * selectedIndex - anglePerSection / 2);\n\n    // Start spinning animation\n    let startRotation = rotation % 360;\n    const startTime = Date.now();\n\n    // Easing function for smooth deceleration\n    const easeOutQuart = t => 1 - Math.pow(1 - t, 4);\n    const animate = () => {\n      const now = Date.now();\n      const elapsed = now - startTime;\n      const progress = Math.min(elapsed / spinDuration, 1);\n\n      // Apply easing to the progress\n      const easedProgress = easeOutQuart(progress);\n\n      // Calculate current rotation with easing\n      const currentRotation = startRotation + finalRotation * easedProgress;\n      setRotation(currentRotation);\n\n      // Update selected option during spin (optional visual effect)\n      if (progress < 0.98) {\n        // Don't update in the last 2%\n        const currentAngle = (currentRotation + 90) % 360; // Convert to 0-360 range\n        const segmentIndex = Math.floor(currentAngle % 360 / anglePerSection);\n        const currentOption = options[options.length - 1 - segmentIndex % options.length];\n        setSelectedOption(currentOption);\n      } else {\n        setSelectedOption(options[selectedIndex]);\n      }\n      if (progress < 1) {\n        requestAnimationFrame(animate);\n      } else {\n        // Finalize\n        setRotation(startRotation + finalRotation);\n        setSelectedOption(options[selectedIndex]);\n        setIsSpinning(false);\n      }\n    };\n    animate();\n  };\n\n  // Calculate clip paths for each segment\n  const getSegmentPath = (startAngle, endAngle, radius = 150) => {\n    const startRad = startAngle * Math.PI / 180;\n    const endRad = endAngle * Math.PI / 180;\n    const x1 = 150 + Math.cos(startRad) * radius;\n    const y1 = 150 + Math.sin(startRad) * radius;\n    const x2 = 150 + Math.cos(endRad) * radius;\n    const y2 = 150 + Math.sin(endRad) * radius;\n    const largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1;\n    return `M 150 150 L ${x1} ${y1} A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2} Z`;\n  };\n  const wheelSections = getWheelSections();\n  const canSpin = options.length >= 2 && !isSpinning;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 py-8 px-4 sm:px-6 lg:px-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/add-options'),\n          className: \"inline-flex items-center text-gray-600 hover:text-gray-900 transition-colors duration-200\",\n          children: [/*#__PURE__*/_jsxDEV(ArrowLeftIcon, {\n            className: \"h-5 w-5 mr-1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), \"Back to options\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-extrabold text-gray-900 bg-clip-text text-transparent bg-gradient-to-r from-primary-600 to-indigo-600\",\n          children: \"Spin the Wheel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card p-6 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative w-full max-w-md mx-auto mb-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative mx-auto\",\n            style: {\n              width: '300px',\n              height: '300px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              ref: wheelRef,\n              className: \"relative w-full h-full rounded-full overflow-hidden shadow-xl transition-transform duration-100\",\n              style: {\n                transform: `rotate(${rotation}deg)`,\n                transition: isSpinning ? 'transform 0.1s linear' : 'transform 2s cubic-bezier(0.17, 0.67, 0.12, 0.99)'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                viewBox: \"0 0 300 300\",\n                className: \"w-full h-full\",\n                children: [wheelSections.map((section, index) => /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: getSegmentPath(section.startAngle, section.endAngle, 150),\n                  fill: section.color,\n                  stroke: \"#fff\",\n                  strokeWidth: \"1\"\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this)), /*#__PURE__*/_jsxDEV(\"circle\", {\n                  cx: \"150\",\n                  cy: \"150\",\n                  r: \"30\",\n                  fill: \"#fff\",\n                  stroke: \"#e5e7eb\",\n                  strokeWidth: \"2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this), wheelSections.map((section, index) => {\n                  const radius = 100;\n                  const angle = section.textRotation * Math.PI / 180;\n                  const x = 150 + Math.cos(angle) * radius;\n                  const y = 150 + Math.sin(angle) * radius;\n                  return /*#__PURE__*/_jsxDEV(\"text\", {\n                    x: x,\n                    y: y,\n                    textAnchor: \"middle\",\n                    dominantBaseline: \"middle\",\n                    fill: \"white\",\n                    fontSize: \"12\",\n                    fontWeight: \"600\",\n                    transform: `rotate(${section.textRotation + 90}, ${x}, ${y})`,\n                    className: \"pointer-events-none select-none\",\n                    children: section.option.length > 15 ? section.option.substring(0, 12) + '...' : section.option\n                  }, `text-${index}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 23\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute top-0 left-1/2 transform -translate-x-1/2 -mt-2 w-0 h-0 \\r border-l-8 border-r-8 border-b-8 border-l-transparent border-r-transparent \\r border-b-red-600 z-10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), isSpinning && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute inset-0 rounded-full bg-white bg-opacity-20 animate-pulse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-8 text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-2 text-sm font-medium text-gray-500\",\n              children: isSpinning ? 'Spinning...' : selectedOption ? 'Selected:' : 'Ready to spin!'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), selectedOption && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-2xl font-bold text-gray-900 bg-primary-50 py-3 px-6 rounded-lg border border-primary-100 inline-block\",\n              children: selectedOption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center mt-8\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: spinWheel,\n            disabled: !canSpin,\n            className: `btn btn-primary inline-flex items-center justify-center px-8 py-4 text-base font-medium rounded-xl shadow-lg transform transition-all duration-200 ${canSpin ? 'hover:scale-105 hover:shadow-xl focus:ring-2 focus:ring-offset-2 focus:ring-primary-500' : 'opacity-50 cursor-not-allowed'}`,\n            children: [/*#__PURE__*/_jsxDEV(ArrowPathIcon, {\n              className: `-ml-1 mr-2 h-5 w-5 ${isSpinning ? 'animate-spin' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), isSpinning ? 'Spinning...' : 'Spin the Wheel']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), options.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold text-gray-900 mb-4\",\n          children: \"Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 sm:grid-cols-2 gap-3\",\n          children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `p-3 rounded-lg border ${selectedOption === option ? 'border-primary-200 bg-primary-50' : 'border-gray-200 bg-white'} transition-colors duration-200`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-6 h-6 rounded-full flex-shrink-0 flex items-center justify-center text-white text-xs font-bold mr-3\",\n                style: {\n                  backgroundColor: colors[index % colors.length]\n                },\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"truncate\",\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(SpinWheelPage, \"z7mK3AdziKsngme8xeYPqx2EkCM=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = SpinWheelPage;\nexport default SpinWheelPage;\nvar _c;\n$RefreshReg$(_c, \"SpinWheelPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useLocation","useNavigate","ArrowPathIcon","ArrowLeftIcon","jsxDEV","_jsxDEV","SpinWheelPage","_s","location","navigate","options","setOptions","isSpinning","setIsSpinning","selectedOption","setSelectedOption","rotation","setRotation","wheelRef","spinTimeout","spinInterval","colors","_location$state","state","currentSpinInterval","current","currentSpinTimeout","clearInterval","clearTimeout","getWheelSections","totalOptions","length","anglePerSection","map","option","index","startAngle","endAngle","color","textRotation","spinWheel","spinDuration","spinRotations","Math","floor","random","selectedIndex","finalRotation","startRotation","startTime","Date","now","easeOutQuart","t","pow","animate","elapsed","progress","min","easedProgress","currentRotation","currentAngle","segmentIndex","currentOption","requestAnimationFrame","getSegmentPath","radius","startRad","PI","endRad","x1","cos","y1","sin","x2","y2","largeArcFlag","wheelSections","canSpin","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","ref","transform","transition","viewBox","section","d","fill","stroke","strokeWidth","cx","cy","r","angle","x","y","textAnchor","dominantBaseline","fontSize","fontWeight","substring","disabled","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/War Machine/Desktop/MICROVERSE REPO/choice_roulette/src/pages/SpinWheelPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { ArrowPathIcon, ArrowLeftIcon } from '@heroicons/react/24/outline';\r\n\r\nconst SpinWheelPage = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [options, setOptions] = useState([]);\r\n  const [isSpinning, setIsSpinning] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [rotation, setRotation] = useState(0);\r\n  // Removed unused state variables\r\n  // const [spinning, setSpinning] = useState(false);\r\n  const wheelRef = useRef(null);\r\n  const spinTimeout = useRef(null);\r\n  const spinInterval = useRef(null);\r\n\r\n  // Generate colors for the wheel segments\r\n  const colors = [\r\n    '#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6',\r\n    '#EC4899', '#14B8A6', '#F97316', '#6366F1', '#F43F5E'\r\n  ];\r\n\r\n  // Get options from location state or redirect if none provided\r\n  useEffect(() => {\r\n    if (location.state?.options) {\r\n      setOptions(location.state.options);\r\n    } else {\r\n      navigate('/add-options');\r\n    }\r\n    \r\n    return () => {\r\n      const currentSpinInterval = spinInterval.current;\r\n      const currentSpinTimeout = spinTimeout.current;\r\n      \r\n      if (currentSpinInterval) clearInterval(currentSpinInterval);\r\n      if (currentSpinTimeout) clearTimeout(currentSpinTimeout);\r\n    };\r\n  }, [location.state, navigate]);\r\n\r\n  // Calculate the angle for each option on the wheel\r\n  const getWheelSections = useCallback(() => {\r\n    const totalOptions = options.length;\r\n    if (totalOptions === 0) return [];\r\n    \r\n    const anglePerSection = 360 / totalOptions;\r\n    return options.map((option, index) => {\r\n      const startAngle = index * anglePerSection - 90; // Start from top\r\n      const endAngle = (index + 1) * anglePerSection - 90;\r\n      const color = colors[index % colors.length];\r\n      \r\n      return {\r\n        option,\r\n        startAngle,\r\n        endAngle,\r\n        color,\r\n        textRotation: startAngle + anglePerSection / 2 // Center text in the segment\r\n      };\r\n    });\r\n  }, [options, colors]); // Added dependencies\r\n\r\n  const spinWheel = () => {\r\n    if (isSpinning || options.length < 2) return;\r\n    \r\n    setIsSpinning(true);\r\n    setSelectedOption(null);\r\n    \r\n    // Random number of full rotations (5-10) plus a random segment\r\n    const spinDuration = 5000; // 5 seconds\r\n    const spinRotations = 5 + Math.floor(Math.random() * 6);\r\n    const selectedIndex = Math.floor(Math.random() * options.length);\r\n    const anglePerSection = 360 / options.length;\r\n    const finalRotation = 360 * spinRotations + (360 - (anglePerSection * selectedIndex) - (anglePerSection / 2));\r\n    \r\n    // Start spinning animation\r\n    let startRotation = rotation % 360;\r\n    const startTime = Date.now();\r\n    \r\n    // Easing function for smooth deceleration\r\n    const easeOutQuart = (t) => 1 - Math.pow(1 - t, 4);\r\n    \r\n    const animate = () => {\r\n      const now = Date.now();\r\n      const elapsed = now - startTime;\r\n      const progress = Math.min(elapsed / spinDuration, 1);\r\n      \r\n      // Apply easing to the progress\r\n      const easedProgress = easeOutQuart(progress);\r\n      \r\n      // Calculate current rotation with easing\r\n      const currentRotation = startRotation + (finalRotation * easedProgress);\r\n      setRotation(currentRotation);\r\n      \r\n      // Update selected option during spin (optional visual effect)\r\n      if (progress < 0.98) { // Don't update in the last 2%\r\n        const currentAngle = (currentRotation + 90) % 360; // Convert to 0-360 range\r\n        const segmentIndex = Math.floor((currentAngle % 360) / anglePerSection);\r\n        const currentOption = options[options.length - 1 - (segmentIndex % options.length)];\r\n        setSelectedOption(currentOption);\r\n      } else {\r\n        setSelectedOption(options[selectedIndex]);\r\n      }\r\n      \r\n      if (progress < 1) {\r\n        requestAnimationFrame(animate);\r\n      } else {\r\n        // Finalize\r\n        setRotation(startRotation + finalRotation);\r\n        setSelectedOption(options[selectedIndex]);\r\n        setIsSpinning(false);\r\n      }\r\n    };\r\n    \r\n    animate();\r\n  };\r\n\r\n  // Calculate clip paths for each segment\r\n  const getSegmentPath = (startAngle, endAngle, radius = 150) => {\r\n    const startRad = (startAngle * Math.PI) / 180;\r\n    const endRad = (endAngle * Math.PI) / 180;\r\n    \r\n    const x1 = 150 + Math.cos(startRad) * radius;\r\n    const y1 = 150 + Math.sin(startRad) * radius;\r\n    const x2 = 150 + Math.cos(endRad) * radius;\r\n    const y2 = 150 + Math.sin(endRad) * radius;\r\n    \r\n    const largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1;\r\n    \r\n    return `M 150 150 L ${x1} ${y1} A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2} Z`;\r\n  };\r\n\r\n  const wheelSections = getWheelSections();\r\n  const canSpin = options.length >= 2 && !isSpinning;\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 py-8 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-2xl mx-auto\">\r\n        <div className=\"flex items-center justify-between mb-8\">\r\n          <button\r\n            onClick={() => navigate('/add-options')}\r\n            className=\"inline-flex items-center text-gray-600 hover:text-gray-900 transition-colors duration-200\"\r\n          >\r\n            <ArrowLeftIcon className=\"h-5 w-5 mr-1\" />\r\n            Back to options\r\n          </button>\r\n          <h1 className=\"text-3xl font-extrabold text-gray-900 bg-clip-text text-transparent bg-gradient-to-r from-primary-600 to-indigo-600\">\r\n            Spin the Wheel\r\n          </h1>\r\n          <div className=\"w-20\"></div> {/* Spacer for alignment */}\r\n        </div>\r\n\r\n        <div className=\"card p-6 mb-8\">\r\n          <div className=\"relative w-full max-w-md mx-auto mb-8\">\r\n            {/* Wheel Container */}\r\n            <div className=\"relative mx-auto\" style={{ width: '300px', height: '300px' }}>\r\n              {/* Wheel */}\r\n              <div \r\n                ref={wheelRef}\r\n                className=\"relative w-full h-full rounded-full overflow-hidden shadow-xl transition-transform duration-100\"\r\n                style={{\r\n                  transform: `rotate(${rotation}deg)`,\r\n                  transition: isSpinning ? 'transform 0.1s linear' : 'transform 2s cubic-bezier(0.17, 0.67, 0.12, 0.99)'\r\n                }}\r\n              >\r\n                <svg viewBox=\"0 0 300 300\" className=\"w-full h-full\">\r\n                  {wheelSections.map((section, index) => (\r\n                    <path\r\n                      key={index}\r\n                      d={getSegmentPath(section.startAngle, section.endAngle, 150)}\r\n                      fill={section.color}\r\n                      stroke=\"#fff\"\r\n                      strokeWidth=\"1\"\r\n                    />\r\n                  ))}\r\n                  \r\n                  {/* Center circle */}\r\n                  <circle cx=\"150\" cy=\"150\" r=\"30\" fill=\"#fff\" stroke=\"#e5e7eb\" strokeWidth=\"2\" />\r\n                  \r\n                  {/* Text labels */}\r\n                  {wheelSections.map((section, index) => {\r\n                    const radius = 100;\r\n                    const angle = (section.textRotation * Math.PI) / 180;\r\n                    const x = 150 + Math.cos(angle) * radius;\r\n                    const y = 150 + Math.sin(angle) * radius;\r\n                    \r\n                    return (\r\n                      <text\r\n                        key={`text-${index}`}\r\n                        x={x}\r\n                        y={y}\r\n                        textAnchor=\"middle\"\r\n                        dominantBaseline=\"middle\"\r\n                        fill=\"white\"\r\n                        fontSize=\"12\"\r\n                        fontWeight=\"600\"\r\n                        transform={`rotate(${section.textRotation + 90}, ${x}, ${y})`}\r\n                        className=\"pointer-events-none select-none\"\r\n                      >\r\n                        {section.option.length > 15 \r\n                          ? section.option.substring(0, 12) + '...' \r\n                          : section.option}\r\n                      </text>\r\n                    );\r\n                  })}\r\n                </svg>\r\n              </div>\r\n              \r\n              {/* Pointer */}\r\n              <div className=\"absolute top-0 left-1/2 transform -translate-x-1/2 -mt-2 w-0 h-0 \r\n                        border-l-8 border-r-8 border-b-8 border-l-transparent border-r-transparent \r\n                        border-b-red-600 z-10\"></div>\r\n              \r\n              {/* Glow effect when spinning */}\r\n              {isSpinning && (\r\n                <div className=\"absolute inset-0 rounded-full bg-white bg-opacity-20 animate-pulse\"></div>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Result Display */}\r\n            <div className=\"mt-8 text-center\">\r\n              <div className=\"mb-2 text-sm font-medium text-gray-500\">\r\n                {isSpinning ? 'Spinning...' : selectedOption ? 'Selected:' : 'Ready to spin!'}\r\n              </div>\r\n              {selectedOption && (\r\n                <div className=\"text-2xl font-bold text-gray-900 bg-primary-50 py-3 px-6 rounded-lg border border-primary-100 inline-block\">\r\n                  {selectedOption}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex justify-center mt-8\">\r\n            <button\r\n              onClick={spinWheel}\r\n              disabled={!canSpin}\r\n              className={`btn btn-primary inline-flex items-center justify-center px-8 py-4 text-base font-medium rounded-xl shadow-lg transform transition-all duration-200 ${\r\n                canSpin \r\n                  ? 'hover:scale-105 hover:shadow-xl focus:ring-2 focus:ring-offset-2 focus:ring-primary-500' \r\n                  : 'opacity-50 cursor-not-allowed'\r\n              }`}\r\n            >\r\n              <ArrowPathIcon className={`-ml-1 mr-2 h-5 w-5 ${isSpinning ? 'animate-spin' : ''}`} />\r\n              {isSpinning ? 'Spinning...' : 'Spin the Wheel'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Options List */}\r\n        {options.length > 0 && (\r\n          <div className=\"card p-6\">\r\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Options</h2>\r\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\r\n              {options.map((option, index) => (\r\n                <div \r\n                  key={index} \r\n                  className={`p-3 rounded-lg border ${\r\n                    selectedOption === option \r\n                      ? 'border-primary-200 bg-primary-50' \r\n                      : 'border-gray-200 bg-white'\r\n                  } transition-colors duration-200`}\r\n                >\r\n                  <div className=\"flex items-center\">\r\n                    <div \r\n                      className=\"w-6 h-6 rounded-full flex-shrink-0 flex items-center justify-center text-white text-xs font-bold mr-3\"\r\n                      style={{ backgroundColor: colors[index % colors.length] }}\r\n                    >\r\n                      {index + 1}\r\n                    </div>\r\n                    <span className=\"truncate\">{option}</span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SpinWheelPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}